#+title: An Introduction to Futures Spreads
#+author: Matt Brigida, Ph.D.
#+SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="mystyle.css" />

#+BEGIN_EXPORT html :eval no
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
#+END_EXPORT

#+BEGIN_EXPORT html :eval no
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<script src="https://unpkg.com/vue-chartjs/dist/vue-chartjs.min.js"></script>
#+END_EXPORT


* Refining



* Crack Spread Calculator

#+BEGIN_EXPORT html
<style>
.fiddle iframe {
height: 300px //you can manually change this height
}
</style>

<div class="fiddle">
<script async src="https://jsfiddle.net/mbkr1/g6rkdq85/embed/result,js,html,css/dark/"></script>
</div>
#+END_EXPORT

# <script async src="//jsfiddle.net/mbkr1/od34mwxn/1/embed/js,html,css,result/dark/"></script>

* Crack Spread Over Time


#+BEGIN_SRC R :exports both :results both :cache yes :session crack
  library(EIAdata)

  key <- source("~/eia_key")$value

  cl1 <- getEIA("PET.RCLC1.D", key=key)
  rb1 <- getEIA("PET.EER_EPMRR_PE1_Y35NY_DPG.D", key = key)
  ho1 <- getEIA("PET.EER_EPD2F_PE1_Y35NY_DPG.D", key = key)

  prices1 <- merge.xts(cl1, rb1, ho1)

  prices1 <- prices1[complete.cases(prices1), ]

  crack_bbl_1 <- 42 * (2/3) * prices1$PET.EER_EPMRR_PE1_Y35NY_DPG.D + 42 * (1/3) * prices1$PET.EER_EPD2F_PE1_Y35NY_DPG.D - prices1$PET.RCLC1.D

  crack_per_1 <- crack_bbl_1 / prices1$PET.RCLC1.D
#+END_SRC

#+RESULTS[f2e4d89e43687cc86a2dfef180e2c6cdd2743bb0]:

#+BEGIN_SRC R :results graphics :file crack_bbl_1.png :exports both :cache yes :session crack
  plot(crack_bbl_1["2019/"])
#+END_SRC

#+RESULTS[28f2455411ae6109e39093ad306c942b7e2b991b]:
[[file:crack_bbl_1.png]]


#+BEGIN_SRC R :results graphics :file crack_per_1.png :exports both :cache yes :session crack
  plot(crack_per_1["2019/"])
#+END_SRC

#+RESULTS[8fe64d4081fd023642fb5b57dc969611de54152d]:
[[file:crack_per_1.png]]

#  Lets try and save a htmlwidget and then insert it as an iframe--------

#+BEGIN_SRC R :exports both :cache yes :session crack
  library(highcharter)
  library(htmlwidgets)
  hc <- hchart(crack_per_1) %>% hc_add_theme(hc_theme_economist()) %>% hc_title(text = "Percent Refining Margin (% Crack Spread) Over Time", margin = 20, align = "left")
  saveWidget(hc, "crack_per_1_widget.html")
#+END_SRC

#+RESULTS[cf7f17c5a9504d9f3b8154199670bc2234f1f2fe]:

#+begin_export html
<iframe width="100%" height="500px" frameBorder=0 src="./crack_per_1_widget.html"></iframe>
#+end_export




* Crush Spread

The Crush Spread is the refining margin on Soybeans.   

[[https://www.cmegroup.com/education/files/soybean-crush-reference-guide.pdf][The CME has a great reference guide.]]

* Calculating the Crush Spread

Calculation from here: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=987507&download=yes

$$Crush\ Spread\ =\ (Soybean\ Meal\ in\ $\ per\ ton\ x\ 100) + (Soybean\ Oil\ in\ $ per\ 100\ lbs.\ x\ 600) â€“ (Soybeans\ in\ cents\ per\ bu.\ x\ 50)$$



* Crush Spread Calculator

#+BEGIN_EXPORT html

<div class="fiddle">
<script async src="https://jsfiddle.net/mbkr1/hpur8feq/embed/result,js,html,css/dark/"></script>
</div>
#+END_EXPORT



* Calendar Spreads

-  Calendar spreads can hedge storage costs.  

* Locational Spreads

-  Locational spreads hedge the cost of transportation from one point to another.


